<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    

<mapper namespace="com.neuedu.entity.User">

  
  <!-- 添加用户 -->
  <insert id="addUser" parameterType="user" keyColumn="id" keyProperty="id"
  statementType="PREPARED" useGeneratedKeys="true">
     
     insert into user(username,password,email,phone,question,answer,role,create_time,update_time)
     values(#{name},#{password},#{email},#{phone},#{question},#{answer},#{role},now(),now())
  </insert>
  
  
    <!-- 批量添加用户 -->
  <insert id="addBatchUser" parameterType="list" keyColumn="id" keyProperty="id"
  statementType="PREPARED" useGeneratedKeys="true">
     
     insert into user(username,password,email,phone,question,answer,role,create_time,
     update_time) values
     <foreach collection="list" item="user" separator="," >
          (#{user.name},#{user.password},#{user.email},#{user.phone},#{user.question},
          #{user.answer},#{user.role},now(),now())
     </foreach>
   
  </insert>
  
    <!-- 根据ids查询指定的某些用户 -->
    <select id="findUserByForeach"  parameterType="java.util.ArrayList" resultType="user">
    
      select  id,username,password from user where id in 
      <foreach collection="list" item="id" separator="," open="(" close=")">
        #{id}
      </foreach>
      
    </select>
  
  

  <select id="checkUserName"  parameterType="java.lang.String"  
  resultType="java.lang.Integer">
  	
  	select count(username) from user where username=#{username}
  	
  </select>
  
  <select id="findUserByUserNameAndPassword" parameterType="java.util.Map" resultType="com.neuedu.entity.User">
    
       select  id, username ,password,email,phone,question,answer,role,create_time,update_time from user where username=#{username} and password=#{password}
  </select>
  
  
   <update id="updateTokenByUserId" parameterType="java.util.Map" >
     
     update user set token=#{token} where id=#{userid} 
   </update>
  
  
    <select id="findUserByToken" parameterType="string" resultType="com.neuedu.entity.User">
    
       select  id, username ,password,email,phone,question,answer,role,create_time,update_time from user where token=#{token}
  </select>

    
    <resultMap type="user" id="userResultMap">
      <id column="id" property="id"/>
      <result column="username" property="name"/>
      <result column="password" property="password"/>
      
    </resultMap>
    
    <select id="findAllUser"  resultMap="userResultMap" useCache="false">
     select  id, username ,password,email,phone,question,answer,role,create_time,update_time from user
    </select>
    <!-- 分页查询 -->
    <select id="findTotalCount" resultType="int">
      select count(id) from user
    </select>
    <select id="findUserbyPage" parameterType="map" resultType="user">
       select  id, username ,password,email,phone,question,answer,role,create_time,update_time from user limit #{offset} ,#{pageSize}
    </select>
    
    
    <delete id="deleteByUserid" parameterType="int">
     delete  from  user where  id=#{userid}
    </delete>
    
    

</mapper>
